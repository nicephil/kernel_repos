diff -rupN linux-3.3.8.org/arch/mips/kernel/machine_kexec.c linux-3.3.8/arch/mips/kernel/machine_kexec.c
--- linux-3.3.8.org/arch/mips/kernel/machine_kexec.c	2015-03-25 16:48:12.637082263 +0530
+++ linux-3.3.8/arch/mips/kernel/machine_kexec.c	2015-03-25 16:52:52.533285858 +0530
@@ -190,8 +190,13 @@ machine_kexec(struct kimage *image)
 	pr_info("kexec_start_address(entry point of new kernel) = %p\n",
 			(void *)kexec_start_address);

-	kexec_indirection_page =
-		(unsigned long) phys_to_virt(image->head & PAGE_MASK);
+	if (image->type == KEXEC_TYPE_DEFAULT) {
+	       kexec_indirection_page =
+			(unsigned long) phys_to_virt(image->head & PAGE_MASK);
+	} else {
+		kexec_indirection_page = (unsigned long)&image->head;
+	}
+
 	pr_info("kexec_indirection_page = %p\n",
 			(void *)kexec_indirection_page);

diff -rupN linux-3.3.8.org/arch/mips/kernel/setup.c linux-3.3.8/arch/mips/kernel/setup.c
--- linux-3.3.8.org/arch/mips/kernel/setup.c	2015-03-25 16:48:12.597081375 +0530
+++ linux-3.3.8/arch/mips/kernel/setup.c	2015-03-25 17:01:47.245107704 +0530
@@ -488,6 +488,49 @@ static int __init fdt_early(char *p)
 }
 early_param("fdt", fdt_early);

+#ifdef CONFIG_KEXEC
+static inline unsigned long long get_total_mem(void)
+{
+	unsigned long long total;
+	total = max_pfn - min_low_pfn;
+	return total << PAGE_SHIFT;
+}
+
+static void __init mips_parse_crashkernel(void)
+{
+	unsigned long long total_mem;
+	unsigned long long crash_size, crash_base;
+	int ret;
+
+	total_mem = get_total_mem();
+	ret = parse_crashkernel(boot_command_line, total_mem,
+			&crash_size, &crash_base);
+	if (ret != 0 || crash_size <= 0)
+		return;
+
+	crashk_res.start = crash_base;
+	crashk_res.end   = crash_base + crash_size - 1;
+}
+static void __init request_crashkernel(struct resource *res)
+{
+	int ret;
+	ret = request_resource(res, &crashk_res);
+	if (!ret)
+		printk(KERN_INFO "Reserving %ldMB of memory at %ldMB "
+			"for crashkernel\n",
+			(unsigned long)((crashk_res.end -
+				crashk_res.start + 1) >> 20),
+			(unsigned long)(crashk_res.start  >> 20));
+}
+#else
+static void __init mips_parse_crashkernel(void)
+{
+}
+static void __init request_crashkernel(struct resource *res)
+{
+}
+#endif
+
 static void __init arch_mem_init(char **cmdline_p)
 {
 	phys_t init_mem, init_end, init_size;
@@ -545,6 +588,7 @@ static void __init arch_mem_init(char **
 	}

 	bootmem_init();
+	mips_parse_crashkernel();
 #ifdef CONFIG_KEXEC
 	if (crashk_res.start != crashk_res.end)
 		reserve_bootmem(crashk_res.start,
@@ -557,49 +601,6 @@ static void __init arch_mem_init(char **
 	paging_init();
 }

-#ifdef CONFIG_KEXEC
-static inline unsigned long long get_total_mem(void)
-{
-	unsigned long long total;
-	total = max_pfn - min_low_pfn;
-	return total << PAGE_SHIFT;
-}
-
-static void __init mips_parse_crashkernel(void)
-{
-	unsigned long long total_mem;
-	unsigned long long crash_size, crash_base;
-	int ret;
-
-	total_mem = get_total_mem();
-	ret = parse_crashkernel(boot_command_line, total_mem,
-			&crash_size, &crash_base);
-	if (ret != 0 || crash_size <= 0)
-		return;
-
-	crashk_res.start = crash_base;
-	crashk_res.end   = crash_base + crash_size - 1;
-}
-static void __init request_crashkernel(struct resource *res)
-{
-	int ret;
-
-	ret = request_resource(res, &crashk_res);
-	if (!ret)
-		printk(KERN_INFO "Reserving %ldMB of memory at %ldMB "
-			"for crashkernel\n",
-			(unsigned long)((crashk_res.end -
-				crashk_res.start + 1) >> 20),
-			(unsigned long)(crashk_res.start  >> 20));
-}
-#else
-static void __init mips_parse_crashkernel(void)
-{
-}
-static void __init request_crashkernel(struct resource *res)
-{
-}
-#endif

 static void __init resource_init(void)
 {
@@ -616,7 +617,6 @@ static void __init resource_init(void)
 	/*
 	 * Request address space for all standard RAM.
 	 */
-	mips_parse_crashkernel();

 	for (i = 0; i < boot_mem_map.nr_map; i++) {
 		struct resource *res;
